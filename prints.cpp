#include <iostream>
#include <string>
#include "prints.h"
using namespace std;

void print_board(char **board, int ROWS, int COLS)
{
    // text symbols generated by https://www.madeintext.com/text-symbols/
    // beginning space & column labels
    cout << "  ";
    for (int i = 0; i < COLS; i++)
    {
        if (i < 10)
            cout << "  " << i << " ";
        else
            cout << "  " << i;
    }
    cout << endl;

    // separator
    cout << "  ┼";
    for (int i = 0; i < COLS; i++)
    {
        cout << "–––┼";
    }
    cout << endl;

    for (int i = 0; i < ROWS; i++)
    {
        // row labels + separator
        cout << char(i + 'a') << " │ ";

        // mine + border
        for (int j = 0; j < COLS; j++)
        {
            if (board[i][j] == '0')
                cout << ' ' << " │ ";
            else
                cout << board[i][j] << " │ ";
        }
        cout << endl;

        // border breathing space
        if (i != ROWS - 1)
            cout << "  ┼–";
        else
            cout << "  ╵ ";
        for (int j = 0; j < COLS; j++)
        {
            if (i == ROWS - 1 && j == COLS - 1)
                cout << "  ╵ ";
            else if (j == COLS - 1)
                cout << "––┼";
            else if (i != ROWS - 1)
                cout << "––┼–";
            else
                cout << "  ╵ ";
        }
        cout << endl;
    }
}

void print_title()
{
    cout << "\033[H\033[J";
    cout << "█▀▄▀█  ▀  █▀▀▄ █▀▀ █▀▀ █   █ █▀▀ █▀▀ █▀▀█ █▀▀ █▀▀█" << endl;
    cout << "█ ▀ █ ▀█▀ █  █ █▀▀ ▀▀█ █▄█▄█ █▀▀ █▀▀ █  █ █▀▀ █▄▄▀" << endl;
    cout << "▀   ▀ ▀▀▀ ▀  ▀ ▀▀▀ ▀▀▀  ▀ ▀  ▀▀▀ ▀▀▀ █▀▀▀ ▀▀▀ ▀ ▀▀" << endl;
    cout << "\n0. Instructions   1. New Game   2. Load Game   3. Quit" << endl;
    cout << ">> ";
}

void print_instructions()
{
    cout << "█ █▄ █ █▀ ▀█▀ █▀█ █ █ █▀▀ ▀█▀ █ █▀█ █▄ █ █▀" << endl;
    cout << "█ █ ▀█ ▄█  █  █▀▄ █▄█ █▄▄  █  █ █▄█ █ ▀█ ▄█\n"
         << endl;
    string input;
    cout << "WIN by uncovering all the unarmed mines \nLOSE by stepping on an armed mine \n \n";

    cout << "each mine will have a number indicating how many BOMBS are around it \n e.g. a mine with the number 2 indicates that there are 2 bombs next to it \n \n";

    cout << "UNCOVER by typing in the coordinates of the mine \n e.g. >> a0 \n \n";

    cout << "add and remove FLAGS with ? to note down possible armed locations and prevent tripping them \n e.g. >> ?a0 \n \n";

    cout << "Enter any value to return to menu" << endl;

    cout << ">> ";
    cin >> input;
}

void print_summary(char difficulty, int time, int uncovered, int flaggedBombs, int total_mines)
{
    cout << "Mode: ";
    if (difficulty == '1')
        cout << "Easy" << endl;
    else if (difficulty == '2')
        cout << "Medium" << endl;
    else if (difficulty == '3')
        cout << "Hard" << endl;
    else if (difficulty == '4')
        cout << "Holy Shit" << endl;
    cout << "Time: ";
    if ((time / 60) > 1)
        cout << time / 60 << " minutes and " << (time % 60) << " seconds" << endl;
    else if ((time / 60) >= 1)
        cout << (time / 60) << " minute and " << (time % 60) << " seconds" << endl;
    else
        cout << time << " seconds" << endl;
    cout << "Tiles uncovered: " << uncovered << endl;
    cout << "Bombs flagged: " << flaggedBombs << "/" << total_mines << endl;

    cout << "\nEnter any value to return to menu" << endl;
    cout << ">> ";
}

void print_end()
{
    cout << "\033[H\033[J";
    cout << "█▀▀ █▀█ █▀█ █▀▄ █▄▄ █▄█ █▀▀ █" << endl;
    cout << "█▄█ █▄█ █▄█ █▄▀ █▄█  █  ██▄ ▄" << endl;
}
